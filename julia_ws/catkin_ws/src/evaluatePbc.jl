using MLBasedESC, MLBasedESCZoo, DiffEqFlux
using LinearAlgebra, BSON


const l1  = 0.26f0                  #wheel
const l2  = 0.05f0                  #torso
const k   = 10
const α   = Float32(360.0/k/2.0 * pi/180.0)

function initialState(θ0, θ0dot, ϕ0, ϕ0dot)
    @assert pi-α <= θ0 <= pi+α "Give an initial spoke angle for the spoke in contact. This will help set the rimless wheel in contact with the surface"
    
    x = l1*sin(pi-θ0)
    y = l1*cos(pi-θ0)
    ϕ = ϕ0 
    θ = θ0 
    xdot = -l1*cos(pi-θ0) * θ0dot
    ydot = l1*sin(pi-θ0) * θ0dot
    ϕdot = ϕ0dot 
    θdot = θ0dot

    return [x, y, ϕ, θ, xdot, ydot, ϕdot, θdot]
end

inputLayer(x) = [cos(x[3]), sin(x[3]), cos(x[4]), sin(x[4]), x[7], x[8]]
x0 = initialState(pi, -1.0f0, 0.0f0, 0.0f0)

Hd = FastChain(
        FastDense(6, 12, elu, bias=true),
        FastDense(12, 3, elu, bias=true),
        FastDense(3, 1, bias=true)
    )

ps = [0.26417577, 0.66445315, -0.81879103, -0.6659355, 0.61314553, 0.36833468, 0.3604692, -0.7039457, 0.09788183, 0.3510964, -0.3383663, -0.29836583, -0.85799766, 0.7987425, 0.19243433, 0.41537213, 0.05706992, 0.0017907354, -0.6881647, 0.6840251, 0.8285711, 0.85545015, 0.3538921, 1.3376164, 0.40651396, 0.6069987, -0.3646734, 0.21268812, -0.014820245, 0.0036728766, -0.039614264, 0.61865324, -0.10793313, 0.3897724, -0.32059616, 0.23804021, -0.48801717, 0.05607528, -0.58718467,0.15631646, -0.15001585, 0.47378936, 0.1551258, 0.4436492, 0.018570907, 0.23565814, -0.40293002, 0.086285554, 0.55454594, 0.0068634, -0.41173473, 1.1846383, -0.074306466, 0.07500793, -0.4952953, 0.5991767, 0.09033809, 0.20470697, 0.09617995, 0.13809678, 0.43904737, -0.27137983, 0.042464554, -0.06387842, -0.32741964, -0.5255205, 0.19775718, 0.05000349, -0.3725438, -0.43818164, 0.3852057, -0.08434933, 0.60099435, -0.18891048, -0.595275, -0.07965208, -0.5762455, -0.24264969, 0.5903341, -0.016203301, 0.043653727, -0.58414847, -0.7851776, -0.3135288, 0.22944665, -0.38230282, 0.55784583, -0.25627735, 0.69374293, -0.026034554, 0.0044225384, 1.0642653, -1.0623641, 0.68581605, -0.77553385, 0.48804647, -0.5735704, 0.7254403, -0.5418677, -0.34295085, 0.5433278, 0.44439533, 0.65823513, -0.072788596, 0.22027425, 0.531866, 0.08487767,-0.57902944, -0.4972385, 0.33989242, -0.5809455, -0.27314156, 0.5915296, 0.0021381655, -0.013339344, 0.5685601, -0.8710001, 0.19808885, 0.5232949, -0.23082559, -0.20329368, -0.5219563, 0.35693598, 0.73580724, -1.297243, -0.4105334, 0.0, -0.04672908, -0.3099363, -0.29538783, -0.80474645, -0.99831384, 1.1080202]
npbc = MLBasedESC.NeuralPBC(6, Hd)
u = MLBasedESCZoo.policyfrom(npbc; umax=1.5)

u(MLBasedESCZoo.wrap(x0), ps)

